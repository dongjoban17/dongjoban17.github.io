<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="https://dongjoban17.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://dongjoban17.github.io/" rel="alternate" type="text/html" /><updated>2018-08-14T16:58:08-04:00</updated><id>https://dongjoban17.github.io/</id><title type="html">Dongjo Ban</title><entry><title type="html">Fixing ethernet connection on CentOS7 after installation</title><link href="https://dongjoban17.github.io/ethernet-fix-centos7/" rel="alternate" type="text/html" title="Fixing ethernet connection on CentOS7 after installation" /><published>2018-02-08T00:00:00-05:00</published><updated>2018-02-08T00:00:00-05:00</updated><id>https://dongjoban17.github.io/ethernet-fix-centos7</id><content type="html" xml:base="https://dongjoban17.github.io/ethernet-fix-centos7/">&lt;h2 id=&quot;solution-worked-when-the-issue-was-encountered&quot;&gt;Solution (worked when the issue was encountered)&lt;/h2&gt;

&lt;p&gt;ifcfg-etho0 may need to be changed using below commands&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /etc/sysconfig/network-scripts
sed &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/^ONBOOT=&quot;no/ONBOOT=&quot;yes/'&lt;/span&gt; ifcfg-eth0 &lt;span class=&quot;c&quot;&gt;# change ONBOOT to yes in ifcfg-eth0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>dongjo</name></author><category term="blog" /><category term="CentOS" /><category term="Troubleshooting" /><summary type="html">Solution (worked when the issue was encountered)</summary></entry><entry><title type="html">Extracting even/odd rows/columns</title><link href="https://dongjoban17.github.io/r-extract-odd-even-rows/" rel="alternate" type="text/html" title="Extracting even/odd rows/columns" /><published>2018-02-04T00:00:00-05:00</published><updated>2018-02-04T00:00:00-05:00</updated><id>https://dongjoban17.github.io/r-extract-odd-even-rows</id><content type="html" xml:base="https://dongjoban17.github.io/r-extract-odd-even-rows/">&lt;h2 id=&quot;approach&quot;&gt;Approach&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# test: our dataframe&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Use logical vectors to select even/odd rows.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# will get you the odd rows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# will get you the odd columns&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Placing '!' in front of logical vector results in odd -&amp;gt; even.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# will get you the even rows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# will get you the even columns&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Every N-th columns/rows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# will get you the N-th rows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# will get you the N-th columns&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;sources&quot;&gt;Sources&lt;/h2&gt;
&lt;p&gt;For more detailed explanation and other examples, refer to the original Stack Overflow post &lt;a href=&quot;https://stackoverflow.com/questions/24440258/selecting-multiple-odd-or-even-columns-rows-for-dataframe&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name>dongjo</name></author><category term="blog" /><category term="R" /><category term="selection" /><summary type="html">Approach</summary></entry><entry><title type="html">Reason for log2 transformation for microarray data before performing limma analysis</title><link href="https://dongjoban17.github.io/limma-microarray/" rel="alternate" type="text/html" title="Reason for log2 transformation for microarray data before performing limma analysis" /><published>2018-01-13T00:00:00-05:00</published><updated>2018-01-13T00:00:00-05:00</updated><id>https://dongjoban17.github.io/limma-microarray</id><content type="html" xml:base="https://dongjoban17.github.io/limma-microarray/">&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/16864941/python-count-items-in-dict-value-that-is-a-list&quot; target=&quot;_blank&quot;&gt;limma&lt;/a&gt; for microarray analysis&lt;/p&gt;

&lt;h2 id=&quot;explanation-from-the-documentation&quot;&gt;Explanation from the documentation&lt;/h2&gt;

&lt;p&gt;“…expression values are more nearly normally distributed and homoscedastic on the log-scale, hence taking means on the log-scale is &lt;u&gt;statistically more powerful and less influenced by individual arrays&lt;/u&gt;.”&lt;/p&gt;

&lt;p&gt;Homoscedatic: having similar variance between samples from the regression line.&lt;/p&gt;</content><author><name>dongjo</name></author><category term="blog" /><category term="limma" /><category term="microarray" /><category term="R" /><summary type="html">Background</summary></entry><entry><title type="html">Merging development branch with master branch</title><link href="https://dongjoban17.github.io/git-merging-master-dev/" rel="alternate" type="text/html" title="Merging development branch with master branch" /><published>2017-12-18T00:00:00-05:00</published><updated>2017-12-18T00:00:00-05:00</updated><id>https://dongjoban17.github.io/git-merging-master-dev</id><content type="html" xml:base="https://dongjoban17.github.io/git-merging-master-dev/">&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;

&lt;p&gt;Just a simple note-to-self so I don’t forget.&lt;/p&gt;

&lt;h2 id=&quot;approach&quot;&gt;Approach&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Merge the master branch with development branch to resolve any merge conflicts
    &lt;ul&gt;
      &lt;li&gt;i.e. master –&amp;gt; dev&lt;/li&gt;
      &lt;li&gt;This will help in keeping the master branch clean.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fix merge conflicts (if there are any).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Merge development branch with the master branch.
    &lt;ul&gt;
      &lt;li&gt;i.e. dev –&amp;gt; master&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>dongjo</name></author><category term="blog" /><category term="git" /><category term="version control" /><summary type="html">Background</summary></entry><entry><title type="html">Summing up length of each dictionary values</title><link href="https://dongjoban17.github.io/python-sum-dict-val/" rel="alternate" type="text/html" title="Summing up length of each dictionary values" /><published>2017-11-14T00:00:00-05:00</published><updated>2017-11-14T00:00:00-05:00</updated><id>https://dongjoban17.github.io/python-sum-dict-val</id><content type="html" xml:base="https://dongjoban17.github.io/python-sum-dict-val/">&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;

&lt;p&gt;I was storing list of strings as a value to a key in dictionary and needed to sum up the counts of total number of elements in the lists for each key.&lt;/p&gt;

&lt;h2 id=&quot;approach&quot;&gt;Approach&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# data: our dictionary&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# We iterate through the values of each key in dict with data.itervalues().&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Then, we use sum to add up all the counts.&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itervalues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;sources&quot;&gt;Sources&lt;/h2&gt;
&lt;p&gt;For more detailed explanation and examples, refer to the original Stack Overflow post &lt;a href=&quot;https://stackoverflow.com/questions/16864941/python-count-items-in-dict-value-that-is-a-list&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name>dongjo</name></author><category term="blog" /><category term="python" /><category term="dict" /><summary type="html">Background</summary></entry></feed>